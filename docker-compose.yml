version: '3.9'

services:
  #-----------------------------------------------
  # Zookeeper Service
  #-----------------------------------------------
  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    restart: always
    networks:
      net0:
        ipv4_address: 172.25.0.40
  #-----------------------------------------------
  # Authentication Service
  #-----------------------------------------------
  auth:
    build: ./Authentication
    image: authentication_service:latest
    command: "node index.js"
    container_name: authentication
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./Authentication:/app
      - /app/node_modules
    depends_on:
      - mysql
    networks:
      net0:
        ipv4_address: 172.25.0.41
  #-----------------------------------------------
  # MySQL Database
  #-----------------------------------------------
  mysql:
    image: mysql
    container_name: authentication_db
    hostname: authentication_db
    restart: always
    ports:
      - "3306:3306"
    expose:
      - "3306"
    environment:
      - "MYSQL_ROOT_PASSWORD=xyz123"
      - "MYSQL_DATABASE=authentication_db"
    networks:
      net0:
        ipv4_address: 172.25.0.42
    volumes:
      - mysql-data:/var/lib/mysql
  #-----------------------------------------------
  # NGINX Server (Load Balancer & Reverse Proxy for UI Service)
  #-----------------------------------------------
  nginx:
    image: nginx:latest
    container_name: nginx_ui
    ports:
      - "5050:3000"
    volumes:
      - ./NGINX/ui/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - ui
    networks:
      net0:
        ipv4_address: 172.25.0.43
  #-----------------------------------------------
  # Internal NGINX Server (Load Balancer & Reverse Proxy for Monitoring Service)
  #-----------------------------------------------
  nginx2:
    image: nginx:latest
    container_name: nginx_monitoring
    ports:
      - "5051:3000"
    volumes:
      - ./NGINX/monitoring/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - monitoring
    networks:
      net0:
        ipv4_address: 172.25.0.44
  #-----------------------------------------------
  # UI Service
  #-----------------------------------------------
  ui:
      build: ./UI
      image: ui:latest
      deploy:
        replicas: 3
      command: /bin/bash -c "cd api && make"
      stdin_open: true
      tty: true
      restart: always
      depends_on:
        - mysql
      volumes:
        - ./UI:/ui
        - 'shared:/ui/shared'
        - './shared:/ui/shared'
        - 'results:/ui/results'
        - './results:/ui/results'
      networks:
        - net0
  #-----------------------------------------------
  # Monitoring Service
  #-----------------------------------------------
  monitoring:
      build: ./Monitoring
      image: monitoring:latest
      deploy:
        replicas: 3
      command: /bin/bash -c "cd api && make" 
      stdin_open: true
      tty: true
      restart: always
      depends_on:
        - mysql
        - zookeeper
      volumes:
        - ./Monitoring:/monitoring
        - 'shared:/monitoring/shared'
        - './shared:/monitoring/shared'
        - 'results:/monitoring/results'
        - './results:/monitoring/results'
      networks:
        - net0
  #-----------------------------------------------
  # Worker Service
  #-----------------------------------------------
  worker:
    build : ./Worker
    image: worker:latest
    volumes:
      - ./Worker:/worker
      - 'shared:/worker/shared'
      - ./shared:/worker/shared
      - 'results:/worker/results'
      - ./results:/worker/results
    restart: always
    depends_on:
      - mysql
      - zookeeper
    deploy:
      replicas: 3
    networks:
      - net0

volumes:
  volumes:
  mysql-data:
    name: mysql_volume
  shared:
    driver: local
    name: shared
  results:
    driver: local
    name: results

networks:
  net0:
    driver : bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
